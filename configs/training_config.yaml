# YOLOv7 Training Configuration for VisDrone Dataset

# Model Configuration
model:
  name: "yolov7"
  config: "configs/yolov7.yaml"
  pretrained: "yolov7.pt" # Download automatically if not exists

# Dataset Configuration
data:
  path: "data/yolo_format"
  train: "train/images"
  val: "val/images"
  test: "test/images"
  nc: 10 # number of classes
  names:
    [
      "pedestrian",
      "people",
      "bicycle",
      "car",
      "van",
      "truck",
      "tricycle",
      "awning-tricycle",
      "bus",
      "motor",
    ]

# Training Parameters
training:
  epochs: 100
  batch_size: 16
  img_size: 640
  workers: 8
  device: "auto" # auto, cpu, cuda, or specific GPU ID

  # Optimizer
  optimizer:
    type: "AdamW"
    lr0: 0.01
    lrf: 0.1 # final learning rate factor
    momentum: 0.937
    weight_decay: 0.0005
    warmup_epochs: 3
    warmup_momentum: 0.8
    warmup_bias_lr: 0.1

  # Learning Rate Scheduler
  scheduler:
    type: "cosine" # linear, cosine

  # Loss weights
  loss:
    box: 0.05
    obj: 1.0
    cls: 0.5
    anchor_t: 4.0

# Data Augmentation
augmentation:
  mosaic: 1.0 # mosaic augmentation probability
  mixup: 0.0 # mixup augmentation probability
  copy_paste: 0.0

  # Spatial augmentations
  degrees: 0.0 # image rotation (+/- deg)
  translate: 0.1 # image translation (+/- fraction)
  scale: 0.5 # image scale (+/- gain)
  shear: 0.0 # image shear (+/- deg)
  perspective: 0.0 # image perspective (+/- fraction)

  # Flip augmentations
  flipud: 0.0 # image flip up-down (probability)
  fliplr: 0.5 # image flip left-right (probability)

  # Color augmentations
  hsv_h: 0.015 # image HSV-Hue augmentation (fraction)
  hsv_s: 0.7 # image HSV-Saturation augmentation (fraction)
  hsv_v: 0.4 # image HSV-Value augmentation (fraction)

# Validation
validation:
  val_interval: 5 # validate every N epochs
  save_interval: 10 # save model every N epochs
  conf_threshold: 0.001
  iou_threshold: 0.6
  max_det: 300
  save_best: true
  save_last: true

# Output Configuration
output:
  project: "results/training"
  name: "yolov7_visdrone"
  exist_ok: false
  save_dir: "results/models"

# Logging
logging:
  wandb: false # enable Weights & Biases logging
  tensorboard: true
  save_plots: true
  verbose: true

# Advanced Settings
advanced:
  # Multi-scale training
  multi_scale: true
  img_size_min: 320
  img_size_max: 640

  # Model optimization
  sync_bn: false
  amp: true # Automatic Mixed Precision

  # Resume training
  resume: "" # path to checkpoint to resume from

  # Early stopping
  patience: 30 # epochs to wait for improvement

  # NMS settings for training
  nms_agnostic: false
  max_nms: 30000

# Drone-specific optimizations
drone_specific:
  # Small object detection optimizations
  small_object_aug: true
  small_object_weight: 1.5

  # Aerial view specific augmentations
  rotation_range: 360 # full rotation for aerial views
  altitude_simulation: true

  # Class-specific settings
  class_weights: [1.0, 1.0, 1.2, 0.8, 0.8, 0.8, 1.2, 1.2, 0.8, 1.0] # weight for each class

  # Detection thresholds optimized for drones
  conf_thresh_low: 0.1 # lower threshold for small objects
  conf_thresh_high: 0.7 # higher threshold for large objects
